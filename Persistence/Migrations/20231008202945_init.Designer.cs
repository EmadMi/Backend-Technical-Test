// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20231008202945_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxTaxFee")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Areas", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxTaxFee = 60,
                            Name = "Gothenburg",
                            Order = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.AreaRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("TaxFee")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("AreaRules", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 6, 29, 0, 0),
                            StartTime = new TimeSpan(0, 6, 0, 0, 0),
                            TaxFee = 8,
                            Year = 2013
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 6, 59, 0, 0),
                            StartTime = new TimeSpan(0, 6, 30, 0, 0),
                            TaxFee = 13,
                            Year = 2013
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 7, 59, 0, 0),
                            StartTime = new TimeSpan(0, 7, 0, 0, 0),
                            TaxFee = 18,
                            Year = 2013
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 8, 29, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            TaxFee = 13,
                            Year = 2013
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 14, 59, 0, 0),
                            StartTime = new TimeSpan(0, 8, 30, 0, 0),
                            TaxFee = 8,
                            Year = 2013
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 15, 29, 0, 0),
                            StartTime = new TimeSpan(0, 15, 0, 0, 0),
                            TaxFee = 13,
                            Year = 2013
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 16, 59, 0, 0),
                            StartTime = new TimeSpan(0, 15, 30, 0, 0),
                            TaxFee = 18,
                            Year = 2013
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 17, 59, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            TaxFee = 13,
                            Year = 2013
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 18, 29, 0, 0),
                            StartTime = new TimeSpan(0, 18, 0, 0, 0),
                            TaxFee = 8,
                            Year = 2013
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 1,
                            EndTime = new TimeSpan(0, 5, 59, 0, 0),
                            StartTime = new TimeSpan(0, 18, 30, 0, 0),
                            TaxFee = 0,
                            Year = 2013
                        });
                });

            modelBuilder.Entity("Domain.Models.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HolyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Holidays", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HolyDate = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            HolyDate = new DateTime(2013, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            HolyDate = new DateTime(2013, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            HolyDate = new DateTime(2013, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            HolyDate = new DateTime(2013, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            HolyDate = new DateTime(2013, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            HolyDate = new DateTime(2013, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            HolyDate = new DateTime(2013, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            HolyDate = new DateTime(2013, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            HolyDate = new DateTime(2013, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            HolyDate = new DateTime(2013, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            HolyDate = new DateTime(2013, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            HolyDate = new DateTime(2013, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            HolyDate = new DateTime(2013, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            HolyDate = new DateTime(2013, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            HolyDate = new DateTime(2013, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsTaxFree")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsTaxFree = true,
                            Name = "Emergency",
                            Order = 1
                        },
                        new
                        {
                            Id = 2,
                            IsTaxFree = true,
                            Name = "Bus",
                            Order = 2
                        },
                        new
                        {
                            Id = 3,
                            IsTaxFree = true,
                            Name = "Diplomat",
                            Order = 3
                        },
                        new
                        {
                            Id = 4,
                            IsTaxFree = true,
                            Name = "Motorcycle",
                            Order = 4
                        },
                        new
                        {
                            Id = 5,
                            IsTaxFree = true,
                            Name = "Military",
                            Order = 5
                        },
                        new
                        {
                            Id = 6,
                            IsTaxFree = true,
                            Name = "Foreign",
                            Order = 6
                        },
                        new
                        {
                            Id = 7,
                            IsTaxFree = false,
                            Name = "Car",
                            Order = 7
                        },
                        new
                        {
                            Id = 8,
                            IsTaxFree = false,
                            Name = "Motorbike",
                            Order = 8
                        });
                });

            modelBuilder.Entity("Domain.Models.AreaRule", b =>
                {
                    b.HasOne("Domain.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });
#pragma warning restore 612, 618
        }
    }
}
